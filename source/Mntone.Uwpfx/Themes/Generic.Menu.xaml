<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
					xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
					xmlns:sys="clr-namespace:System;assembly=mscorlib"
					xmlns:ani="clr-namespace:Mntone.Uwpfx.Media.Animation">
	<PopupAnimation x:Key="{x:Static SystemParameters.MenuPopupAnimationKey}">None</PopupAnimation>
	
	<sys:Double x:Key="ControlContentThemeFontSize">15</sys:Double>
	<sys:Double x:Key="FlyoutBorderThemeSize">1</sys:Double>
	<sys:Double x:Key="FlyoutThemeMaxWidth">456</sys:Double>
	<sys:Double x:Key="FlyoutThemeMinWidth">96</sys:Double>
	<sys:Double x:Key="FlyoutThemeMinHeight">44</sys:Double>
	<sys:Double x:Key="MenuFlyoutSeparatorThemeHeight">1</sys:Double>
	<sys:Double x:Key="MenuFlyoutThemeMinHeight">32</sys:Double>
	<Thickness x:Key="MenuFlyoutPresenterThemePadding">0,0</Thickness>
	<Thickness x:Key="MenuFlyoutItemCheckGlyphMargin">12,11,0,13</Thickness>
	<Thickness x:Key="MenuFlyoutItemChevronMargin">24,0,0,0</Thickness>
	<Thickness x:Key="MenuFlyoutItemThemePadding">12,11,12,13</Thickness>
	<Thickness x:Key="MenuFlyoutItemThemePaddingNarrow">12,5,12,7</Thickness>
	<Thickness x:Key="MenuFlyoutItemPlaceholderThemeThickness">28,0,0,0</Thickness>
	<Thickness x:Key="MenuFlyoutSeparatorThemePadding">12,4,12,4</Thickness>

	<!-- ContextMenu -->
	<Style x:Key="ContextMenuBase"
		   TargetType="ContextMenu">
		<Setter Property="Background"
				Value="{DynamicResource SystemControlBackgroundChromeMediumLowBrush}" />
		<Setter Property="BorderBrush"
				Value="{DynamicResource SystemControlForegroundChromeHighBrush}" />
		<Setter Property="ScrollViewer.HorizontalScrollBarVisibility"
				Value="Disabled" />
		<Setter Property="ScrollViewer.VerticalScrollBarVisibility"
				Value="Auto" />
		<Setter Property="ScrollViewer.PanningMode"
				Value="Both" />
		<Setter Property="MinWidth"
				Value="{DynamicResource FlyoutThemeMinWidth}" />
		<Setter Property="MaxWidth"
				Value="{DynamicResource FlyoutThemeMaxWidth}" />
		<Setter Property="MinHeight"
				Value="{DynamicResource MenuFlyoutThemeMinHeight}" />

		<Setter Property="Stylus.IsFlicksEnabled"
				Value="False" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="ContextMenu">
					<Grid x:Name="ContextMenuGrid"
						  Background="{DynamicResource SystemControlBackgroundChromeMediumLowBrush}">
						<ScrollViewer x:Name="ContextMenuScrollViewer"
									  Grid.ColumnSpan="2"
									  Margin="0,8,0,8"
									  Style="{DynamicResource {ComponentResourceKey TypeInTargetAssembly=FrameworkElement, ResourceId=MenuScrollViewer}}">
							<Grid RenderOptions.ClearTypeHint="Enabled">
								<Canvas Height="0"
										Width="0"
										HorizontalAlignment="Left"
										VerticalAlignment="Top">
									<Rectangle x:Name="OpaqueRect"
											   Height="{Binding ElementName=ContextMenuGrid, Path=ActualHeight}"
											   Width="{Binding ElementName=ContextMenuGrid, Path=ActualWidth}"
											   Fill="{Binding ElementName=ContextMenuGrid, Path=Background}" />
								</Canvas>
								<ItemsPresenter x:Name="ItemsPresenter"
												Margin="{StaticResource MenuFlyoutPresenterThemePadding}"
												KeyboardNavigation.DirectionalNavigation="Cycle"
												Grid.IsSharedSizeScope="true"
												SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
							</Grid>
						</ScrollViewer>
						<Rectangle x:Name="ContextMenuBorder"
								   Stroke="{DynamicResource SystemControlForegroundChromeHighBrush}"
								   StrokeThickness="{StaticResource FlyoutBorderThemeSize}" />
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger SourceName="ContextMenuScrollViewer"
								 Property="ScrollViewer.CanContentScroll"
								 Value="False">
							<Setter TargetName="OpaqueRect"
									Property="Canvas.Top"
									Value="{Binding ElementName=ContextMenuScrollViewer, Path=VerticalOffset}" />
							<Setter TargetName="OpaqueRect"
									Property="Canvas.Left"
									Value="{Binding ElementName=ContextMenuScrollViewer, Path=HorizontalOffset}" />
						</Trigger>
						<Trigger Property="IsOpen"
								 Value="True">
							<Trigger.EnterActions>
								<BeginStoryboard>
									<Storyboard>
										<ani:FadeInThemeAnimation Storyboard.TargetName="ContextMenuGrid"
																  Storyboard.TargetProperty="Opacity" />
									</Storyboard>
								</BeginStoryboard>
							</Trigger.EnterActions>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style TargetType="ContextMenu"
		   BasedOn="{StaticResource ContextMenuBase}" />

	<!-- Menu -->
	<Style TargetType="Menu">
		<Setter Property="Background"
				Value="{DynamicResource SystemControlBackgroundChromeMediumBrush}" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="Menu">
					<Border Background="{TemplateBinding Background}"
							BorderBrush="{TemplateBinding BorderBrush}"
							BorderThickness="{TemplateBinding BorderThickness}"
							Padding="{TemplateBinding Padding}"
							SnapsToDevicePixels="True">
						<ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>


	<ControlTemplate x:Key="{ComponentResourceKey TypeInTargetAssembly=FrameworkElement, ResourceId=SubmenuContent}"
					 TargetType="ContentControl">
		<ContentPresenter />
	</ControlTemplate>

	<!-- MenuItem (Separator) -->
	<Style x:Key="{x:Static MenuItem.SeparatorStyleKey}"
		   TargetType="Separator">
		<Setter Property="Background"
				Value="{DynamicResource SystemControlForegroundBaseMediumLowBrush}" />
		<Setter Property="Padding"
				Value="{StaticResource MenuFlyoutSeparatorThemePadding}" />
		<Setter Property="SnapsToDevicePixels"
				Value="True" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="Separator">
					<Rectangle Fill="{TemplateBinding Background}"
							   Margin="{TemplateBinding Padding}"
							   Height="{StaticResource MenuFlyoutSeparatorThemeHeight}"
							   SnapsToDevicePixels="True" />
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!-- MenuItem (item in Menu) -->
	<ControlTemplate x:Key="{ComponentResourceKey TypeInTargetAssembly=MenuItem, ResourceId=TopLevelItemTemplateKey}"
					 TargetType="MenuItem">
		<Border x:Name="LayoutRoot"
				Background="{TemplateBinding Background}"
				BorderBrush="{TemplateBinding BorderBrush}"
				BorderThickness="{TemplateBinding BorderThickness}"
				SnapsToDevicePixels="True">
			<Grid Margin="{TemplateBinding Padding}">
				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="Auto" />
					<ColumnDefinition />
				</Grid.ColumnDefinitions>
				<ContentPresenter x:Name="Icon"
								  ContentSource="Icon"
								  VerticalAlignment="Center"
								  Width="24"
								  Height="24"
								  Margin="4"
								  SnapsToDevicePixels="True" />
				<TextBlock x:Name="CheckGlyph"
						   Margin="0,0,12,0"
						   VerticalAlignment="Center"
						   FontFamily="{DynamicResource SymbolThemeFontFamily}"
						   Foreground="{DynamicResource SystemControlForegroundBaseMediumHighBrush}"
						   Text="&#xE001;"
						   FontSize="16"
						   Visibility="Hidden" />
				<ContentPresenter x:Name="ContentPresenter"
								  Grid.Column="1"
								  ContentSource="Header"
								  VerticalAlignment="Center"
								  RecognizesAccessKey="True"
								  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
			</Grid>
		</Border>
		<ControlTemplate.Triggers>
			<Trigger Property="Icon"
					 Value="{x:Null}">
				<Setter TargetName="Icon"
						Property="Visibility"
						Value="Collapsed" />
			</Trigger>
			<Trigger Property="IsCheckable"
					 Value="False">
				<Setter TargetName="CheckGlyph"
						Property="Visibility"
						Value="Collapsed" />
			</Trigger>
			<Trigger Property="IsChecked"
					 Value="True">
				<Setter TargetName="CheckGlyph"
						Property="Visibility"
						Value="Visible" />
				<Setter TargetName="Icon"
						Property="Visibility"
						Value="Collapsed" />
			</Trigger>
			<Trigger Property="IsHighlighted"
					 Value="True">
				<Setter TargetName="LayoutRoot"
						Property="Background"
						Value="{DynamicResource SystemControlHighlightListLowBrush}" />
				<Setter TargetName="ContentPresenter"
						Property="TextElement.Foreground"
						Value="{DynamicResource SystemControlHighlightAltBaseHighBrush}" />
				<Setter TargetName="CheckGlyph"
						Property="Foreground"
						Value="{DynamicResource SystemControlHighlightAltBaseHighBrush}" />
			</Trigger>
			<Trigger Property="IsPressed"
					 Value="True">
				<Setter TargetName="LayoutRoot"
						Property="Background"
						Value="{DynamicResource SystemControlHighlightListMediumBrush}" />
				<Setter TargetName="ContentPresenter"
						Property="TextElement.Foreground"
						Value="{DynamicResource SystemControlHighlightAltBaseHighBrush}" />
				<Setter TargetName="CheckGlyph"
						Property="Foreground"
						Value="{DynamicResource SystemControlHighlightAltBaseHighBrush}" />
			</Trigger>
			<Trigger Property="IsEnabled"
					 Value="False">
				<Setter TargetName="LayoutRoot"
						Property="Background"
						Value="{DynamicResource SystemControlTransparentBrush}" />
				<Setter TargetName="ContentPresenter"
						Property="TextElement.Foreground"
						Value="{DynamicResource SystemControlDisabledBaseMediumLowBrush}" />
				<Setter TargetName="CheckGlyph"
						Property="Foreground"
						Value="{DynamicResource SystemControlDisabledBaseMediumLowBrush}" />
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>

	<!-- MenuItem (submenu item in Menu) -->
	<ControlTemplate x:Key="{ComponentResourceKey TypeInTargetAssembly=MenuItem, ResourceId=TopLevelHeaderTemplateKey}"
					 TargetType="MenuItem">
		<Border x:Name="LayoutRoot"
				Background="{TemplateBinding Background}"
				BorderBrush="{TemplateBinding BorderBrush}"
				BorderThickness="{TemplateBinding BorderThickness}"
				SnapsToDevicePixels="True">
			<Grid Margin="{TemplateBinding Padding}">
				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="Auto" />
					<ColumnDefinition />
				</Grid.ColumnDefinitions>
				<ContentPresenter x:Name="Icon"
								  ContentSource="Icon"
								  VerticalAlignment="Center"
								  Width="24"
								  Height="24"
								  Margin="4" />
				<ContentPresenter x:Name="ContentPresenter"
								  Grid.Column="1"
								  ContentSource="Header"
								  VerticalAlignment="Center"
								  RecognizesAccessKey="True"
								  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
				<Popup x:Name="PART_Popup"
					   Focusable="False"
					   IsOpen="{Binding IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}"
					   Placement="Bottom"
					   PlacementTarget="{Binding ElementName=LayoutRoot}"
					   AllowsTransparency="True"
					   HorizontalOffset="1"
					   VerticalOffset="-1">
					<Grid x:Name="SubMenuGrid"
						  MinWidth="{DynamicResource FlyoutThemeMinWidth}"
						  Background="{DynamicResource SystemControlBackgroundChromeMediumLowBrush}">
						<ScrollViewer x:Name="SubMenuScrollViewer"
									  Grid.ColumnSpan="2"
									  Margin="0,8,0,8"
									  Style="{DynamicResource {ComponentResourceKey TypeInTargetAssembly=FrameworkElement, ResourceId=MenuScrollViewer}}">
							<Grid RenderOptions.ClearTypeHint="Enabled">
								<Canvas Height="0"
										Width="0"
										HorizontalAlignment="Left"
										VerticalAlignment="Top">
									<Rectangle x:Name="OpaqueRect"
											   Height="{Binding ElementName=SubMenuGrid, Path=ActualHeight}"
											   Width="{Binding ElementName=SubMenuGrid, Path=ActualWidth}"
											   Fill="{Binding ElementName=SubMenuGrid, Path=Background}" />
								</Canvas>
								<ItemsPresenter x:Name="ItemsPresenter"
												Margin="{StaticResource MenuFlyoutPresenterThemePadding}"
												KeyboardNavigation.DirectionalNavigation="Cycle"
												Grid.IsSharedSizeScope="true"
												SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
							</Grid>
						</ScrollViewer>
						<Rectangle x:Name="SubMenuBorder"
								   Stroke="{DynamicResource SystemControlForegroundChromeHighBrush}"
								   StrokeThickness="{StaticResource FlyoutBorderThemeSize}" />
					</Grid>
				</Popup>
			</Grid>
		</Border>
		<ControlTemplate.Triggers>
			<Trigger Property="IsSuspendingPopupAnimation"
					 Value="True">
				<Setter TargetName="PART_Popup"
						Property="PopupAnimation"
						Value="None" />
			</Trigger>
			<Trigger SourceName="SubMenuScrollViewer"
					 Property="ScrollViewer.CanContentScroll"
					 Value="False">
				<Setter TargetName="OpaqueRect"
						Property="Canvas.Top"
						Value="{Binding ElementName=SubMenuScrollViewer, Path=VerticalOffset}" />
				<Setter TargetName="OpaqueRect"
						Property="Canvas.Left"
						Value="{Binding ElementName=SubMenuScrollViewer, Path=HorizontalOffset}" />
			</Trigger>
			<Trigger Property="IsSubmenuOpen"
					 Value="True">
				<Trigger.EnterActions>
					<BeginStoryboard>
						<Storyboard>
							<ani:FadeInThemeAnimation Storyboard.TargetName="SubMenuGrid"
													  Storyboard.TargetProperty="Opacity" />
						</Storyboard>
					</BeginStoryboard>
				</Trigger.EnterActions>
			</Trigger>
			<Trigger Property="Icon"
					 Value="{x:Null}">
				<Setter TargetName="Icon"
						Property="Visibility"
						Value="Collapsed" />
			</Trigger>
			<Trigger Property="IsHighlighted"
					 Value="True">
				<Setter TargetName="LayoutRoot"
						Property="Background"
						Value="{DynamicResource SystemControlHighlightListLowBrush}" />
				<Setter TargetName="ContentPresenter"
						Property="TextElement.Foreground"
						Value="{DynamicResource SystemControlHighlightAltBaseHighBrush}" />
			</Trigger>
			<Trigger Property="IsPressed"
					 Value="True">
				<Setter TargetName="LayoutRoot"
						Property="Background"
						Value="{DynamicResource SystemControlHighlightListMediumBrush}" />
				<Setter TargetName="ContentPresenter"
						Property="TextElement.Foreground"
						Value="{DynamicResource SystemControlHighlightAltBaseHighBrush}" />
			</Trigger>
			<Trigger Property="IsEnabled"
					 Value="False">
				<Setter TargetName="LayoutRoot"
						Property="Background"
						Value="{DynamicResource SystemControlTransparentBrush}" />
				<Setter TargetName="ContentPresenter"
						Property="TextElement.Foreground"
						Value="{DynamicResource SystemControlDisabledBaseMediumLowBrush}" />
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>

	<!-- MenuItem (item in submenu item) -->
	<ControlTemplate x:Key="{ComponentResourceKey TypeInTargetAssembly=MenuItem, ResourceId=SubmenuItemTemplateKey}"
					 TargetType="MenuItem">
		<Border x:Name="LayoutRoot"
				Background="{TemplateBinding Background}"
				BorderBrush="{TemplateBinding BorderBrush}"
				BorderThickness="{TemplateBinding BorderThickness}">
			<Grid Margin="{TemplateBinding Padding}">
				<Grid.ColumnDefinitions>
					<ColumnDefinition SharedSizeGroup="MenuItemIconColumnGroup"
									  Width="Auto" />
					<ColumnDefinition Width="*" />
					<ColumnDefinition SharedSizeGroup="MenuItemIGTColumnGroup"
									  Width="Auto" />
				</Grid.ColumnDefinitions>
				<ContentPresenter x:Name="Icon"
								  ContentSource="Icon"
								  VerticalAlignment="Center"
								  Width="24"
								  Height="24"
								  Margin="4" />
				<TextBlock x:Name="CheckGlyph"
						   Margin="0,0,12,0"
						   VerticalAlignment="Center"
						   FontFamily="{DynamicResource SymbolThemeFontFamily}"
						   Foreground="{DynamicResource SystemControlForegroundBaseMediumHighBrush}"
						   Text="&#xE001;"
						   FontSize="16"
						   Visibility="Hidden" />
				<ContentPresenter x:Name="ContentPresenter"
								  Margin="0,0,12,0"
								  Grid.Column="1"
								  ContentSource="Header"
								  VerticalAlignment="Center"
								  RecognizesAccessKey="True"
								  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
				<TextBlock x:Name="MenuGestureText"
						   Grid.Column="2"
						   Text="{TemplateBinding InputGestureText}" />
			</Grid>
		</Border>
		<ControlTemplate.Triggers>
			<Trigger Property="Icon"
					 Value="{x:Null}">
				<Setter TargetName="Icon"
						Property="Visibility"
						Value="Collapsed" />
			</Trigger>
			<Trigger Property="IsCheckable"
					 Value="False">
				<Setter TargetName="CheckGlyph"
						Property="Visibility"
						Value="Collapsed" />
			</Trigger>
			<Trigger Property="IsChecked"
					 Value="True">
				<Setter TargetName="CheckGlyph"
						Property="Visibility"
						Value="Visible" />
				<Setter TargetName="Icon"
						Property="Visibility"
						Value="Collapsed" />
			</Trigger>
			<Trigger Property="IsHighlighted"
					 Value="True">
				<Setter TargetName="LayoutRoot"
						Property="Background"
						Value="{DynamicResource SystemControlHighlightListLowBrush}" />
				<Setter TargetName="ContentPresenter"
						Property="TextElement.Foreground"
						Value="{DynamicResource SystemControlHighlightAltBaseHighBrush}" />
				<Setter TargetName="MenuGestureText"
						Property="TextElement.Foreground"
						Value="{DynamicResource SystemControlHighlightAltBaseHighBrush}" />
				<Setter TargetName="CheckGlyph"
						Property="Foreground"
						Value="{DynamicResource SystemControlHighlightAltBaseHighBrush}" />
			</Trigger>
			<Trigger Property="IsPressed"
					 Value="True">
				<Setter TargetName="LayoutRoot"
						Property="Background"
						Value="{DynamicResource SystemControlHighlightListMediumBrush}" />
				<Setter TargetName="ContentPresenter"
						Property="TextElement.Foreground"
						Value="{DynamicResource SystemControlHighlightAltBaseHighBrush}" />
				<Setter TargetName="MenuGestureText"
						Property="TextElement.Foreground"
						Value="{DynamicResource SystemControlHighlightAltBaseHighBrush}" />
				<Setter TargetName="CheckGlyph"
						Property="Foreground"
						Value="{DynamicResource SystemControlHighlightAltBaseHighBrush}" />
			</Trigger>
			<Trigger Property="IsEnabled"
					 Value="False">
				<Setter TargetName="LayoutRoot"
						Property="Background"
						Value="{DynamicResource SystemControlTransparentBrush}" />
				<Setter TargetName="ContentPresenter"
						Property="TextElement.Foreground"
						Value="{DynamicResource SystemControlDisabledBaseMediumLowBrush}" />
				<Setter TargetName="MenuGestureText"
						Property="TextElement.Foreground"
						Value="{DynamicResource SystemControlDisabledBaseMediumLowBrush}" />
				<Setter TargetName="CheckGlyph"
						Property="Foreground"
						Value="{DynamicResource SystemControlDisabledBaseMediumLowBrush}" />
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>

	<!-- MenuItem (submenu item in submenu item)-->
	<ControlTemplate x:Key="{ComponentResourceKey TypeInTargetAssembly=MenuItem, ResourceId=SubmenuHeaderTemplateKey}"
					 TargetType="MenuItem">
		<Border x:Name="LayoutRoot"
				Background="{TemplateBinding Background}"
				BorderBrush="{TemplateBinding BorderBrush}"
				BorderThickness="{TemplateBinding BorderThickness}"
				SnapsToDevicePixels="True">
			<Grid Margin="{TemplateBinding Padding}">
				<Grid.ColumnDefinitions>
					<ColumnDefinition SharedSizeGroup="MenuItemIconColumnGroup"
									  Width="Auto" />
					<ColumnDefinition Width="*" />
					<ColumnDefinition SharedSizeGroup="MenuItemIGTColumnGroup"
									  Width="Auto" />
					<ColumnDefinition Width="Auto" />
				</Grid.ColumnDefinitions>
				<ContentPresenter x:Name="Icon"
								  ContentSource="Icon"
								  VerticalAlignment="Center"
								  Width="24"
								  Height="24"
								  Margin="4" />
				<ContentPresenter x:Name="ContentPresenter"
								  Margin="0,0,12,0"
								  Grid.Column="1"
								  ContentSource="Header"
								  VerticalAlignment="Center"
								  RecognizesAccessKey="True"
								  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
				<TextBlock x:Name="MenuGestureText"
						   Grid.Column="2"
						   Text="{TemplateBinding InputGestureText}" />
				<TextBlock x:Name="SubItemChevron"
						   Grid.Column="3"
						   VerticalAlignment="Center"
						   FontFamily="{DynamicResource SymbolThemeFontFamily}"
						   Foreground="{DynamicResource SystemControlForegroundBaseMediumHighBrush}"
						   Text="&#xE0E3;"
						   FontSize="12" />
				<Popup x:Name="PART_Popup"
					   Focusable="False"
					   IsOpen="{Binding IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}"
					   Placement="Right"
					   AllowsTransparency="True"
					   HorizontalOffset="8"
					   VerticalOffset="-20">
					<Grid x:Name="SubMenuGrid"
						  MinWidth="{DynamicResource FlyoutThemeMinWidth}"
						  Background="{DynamicResource SystemControlBackgroundChromeMediumLowBrush}">
						<ScrollViewer x:Name="SubMenuScrollViewer"
									  Grid.ColumnSpan="2"
									  Margin="0,8,0,8"
									  Style="{DynamicResource {ComponentResourceKey TypeInTargetAssembly=FrameworkElement, ResourceId=MenuScrollViewer}}">
							<Grid RenderOptions.ClearTypeHint="Enabled">
								<Canvas Height="0"
										Width="0"
										HorizontalAlignment="Left"
										VerticalAlignment="Top">
									<Rectangle x:Name="OpaqueRect"
											   Height="{Binding ElementName=SubMenuGrid, Path=ActualHeight}"
											   Width="{Binding ElementName=SubMenuGrid, Path=ActualWidth}"
											   Fill="{Binding ElementName=SubMenuGrid, Path=Background}" />
								</Canvas>
								<ItemsPresenter x:Name="ItemsPresenter"
												Margin="{StaticResource MenuFlyoutPresenterThemePadding}"
												KeyboardNavigation.DirectionalNavigation="Cycle"
												Grid.IsSharedSizeScope="true"
												SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
							</Grid>
						</ScrollViewer>
						<Rectangle x:Name="SubMenuBorder"
								   Stroke="{DynamicResource SystemControlForegroundChromeHighBrush}"
								   StrokeThickness="{StaticResource FlyoutBorderThemeSize}" />
					</Grid>
				</Popup>
			</Grid>
		</Border>
		<ControlTemplate.Triggers>
			<Trigger Property="IsSuspendingPopupAnimation"
					 Value="True">
				<Setter TargetName="PART_Popup"
						Property="PopupAnimation"
						Value="None" />
			</Trigger>
			<Trigger SourceName="SubMenuScrollViewer"
					 Property="ScrollViewer.CanContentScroll"
					 Value="False">
				<Setter TargetName="OpaqueRect"
						Property="Canvas.Top"
						Value="{Binding ElementName=SubMenuScrollViewer, Path=VerticalOffset}" />
				<Setter TargetName="OpaqueRect"
						Property="Canvas.Left"
						Value="{Binding ElementName=SubMenuScrollViewer, Path=HorizontalOffset}" />
			</Trigger>
			<Trigger Property="IsSubmenuOpen"
					 Value="True">
				<Trigger.EnterActions>
					<BeginStoryboard>
						<Storyboard>
							<ani:FadeInThemeAnimation Storyboard.TargetName="SubMenuGrid"
													  Storyboard.TargetProperty="Opacity" />
						</Storyboard>
					</BeginStoryboard>
				</Trigger.EnterActions>
			</Trigger>
			<Trigger Property="Icon"
					 Value="{x:Null}">
				<Setter TargetName="Icon"
						Property="Visibility"
						Value="Collapsed" />
			</Trigger>
			<Trigger Property="IsHighlighted"
					 Value="True">
				<Setter TargetName="LayoutRoot"
						Property="Background"
						Value="{DynamicResource SystemControlHighlightListLowBrush}" />
				<Setter TargetName="ContentPresenter"
						Property="TextElement.Foreground"
						Value="{DynamicResource SystemControlHighlightAltBaseHighBrush}" />
			</Trigger>
			<Trigger Property="IsPressed"
					 Value="True">
				<Setter TargetName="LayoutRoot"
						Property="Background"
						Value="{DynamicResource SystemControlHighlightListMediumBrush}" />
				<Setter TargetName="ContentPresenter"
						Property="TextElement.Foreground"
						Value="{DynamicResource SystemControlHighlightAltBaseHighBrush}" />
			</Trigger>
			<Trigger Property="IsEnabled"
					 Value="False">
				<Setter TargetName="LayoutRoot"
						Property="Background"
						Value="{DynamicResource SystemControlTransparentBrush}" />
				<Setter TargetName="ContentPresenter"
						Property="TextElement.Foreground"
						Value="{DynamicResource SystemControlDisabledBaseMediumLowBrush}" />
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>


	<Style TargetType="MenuItem">
		<Setter Property="Background"
				Value="{DynamicResource SystemControlTransparentBrush}" />
		<Setter Property="Foreground"
				Value="{DynamicResource SystemControlForegroundBaseHighBrush}" />
		<Setter Property="BorderBrush"
				Value="Transparent" />
		<Setter Property="Padding"
				Value="{StaticResource MenuFlyoutItemThemePadding}" />
		<Setter Property="FontSize"
				Value="{StaticResource ControlContentThemeFontSize}" />
		<Setter Property="FontWeight"
				Value="Regular" />
		<Setter Property="HorizontalContentAlignment"
				Value="Stretch" />
		<Setter Property="VerticalContentAlignment"
				Value="Center" />
		<Setter Property="FocusVisualStyle"
				Value="{x:Null}" />

		<Setter Property="ScrollViewer.PanningMode"
				Value="Both" />
		<Setter Property="Stylus.IsFlicksEnabled"
				Value="False" />
		<Setter Property="Template"
				Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly=MenuItem, ResourceId=SubmenuItemTemplateKey}}" />
		<Style.Triggers>
			<Trigger Property="Role"
					 Value="TopLevelHeader">
				<Setter Property="Template"
						Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly=MenuItem, ResourceId=TopLevelHeaderTemplateKey}}" />
				<Setter Property="Padding"
						Value="6,0" />
			</Trigger>
			<Trigger Property="Role"
					 Value="TopLevelItem">
				<Setter Property="Template"
						Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly=MenuItem, ResourceId=TopLevelItemTemplateKey}}" />
			</Trigger>
			<Trigger Property="Role"
					 Value="SubmenuHeader">
				<Setter Property="Template"
						Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly=MenuItem, ResourceId=SubmenuHeaderTemplateKey}}" />
			</Trigger>
		</Style.Triggers>
	</Style>
</ResourceDictionary>